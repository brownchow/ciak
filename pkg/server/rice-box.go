// Code generated by rice embed-go; DO NOT EDIT.
package server

import (
	"time"

	"github.com/GeertJohan/go.rice/embedded"
)

func init() {

	// define files
	file2 := &embedded.EmbeddedFile{
		Filename:    "base.html",
		FileModTime: time.Unix(1608947024, 0),

		Content: string("<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>Ciak media list</title>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\"\r\n          integrity=\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\" crossorigin=\"anonymous\">\r\n</head>\r\n<body>\r\n<header>\r\n    <div class=\"navbar navbar-dark bg-dark box-shadow\">\r\n        <div class=\"container d-flex justify-content-between\">\r\n            <a href=\"#\" class=\"navbar-brand d-flex align-items-center\">\r\n                <strong>{{.Title}}</strong>\r\n            </a>\r\n        </div>\r\n    </div>\r\n</header>\r\n\r\n<main role=\"main\">\r\n{{block \"content\" .}}No content provided{{end}}\r\n</main>\r\n\r\n<footer class=\"text-muted fixed-bottom bg-dark py-3\">\r\n    <div class=\"container\">\r\n        <p class=\"float-right m-0\">\r\n            <a href=\"#\">Back to top</a>\r\n        </p>\r\n        <p class=\"m-0\">Made with skills by <a href=\"https://github.com/GaruGaru\" target=\"_blank\">Garu</a></p>\r\n    </div>\r\n</footer>\r\n</body>\r\n</html>\r\n"),
	}
	file3 := &embedded.EmbeddedFile{
		Filename:    "login.html",
		FileModTime: time.Unix(1608947024, 0),

		Content: string("{{define \"content\"}}\r\n<form class=\"container\" method=\"POST\" action=\"/api/login\">\r\n    <div class=\"form-group\">\r\n        <label for=\"username\">Username</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" placeholder=\"Username\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"Password\">\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n{{end}}"),
	}
	file4 := &embedded.EmbeddedFile{
		Filename:    "media-list.html",
		FileModTime: time.Unix(1608947024, 0),

		Content: string("{{define \"content\"}}\r\n\r\n<section class=\"jumbotron text-center\">\r\n    <h1 class=\"jumbotron-heading\">Your media library</h1>\r\n</section>\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n\r\n        {{if .NoMediasFound}}\r\n        <h1 class=\"text-center\">No playable media found :(</h1>\r\n        {{end}}\r\n\r\n        {{range .PageMedia}}\r\n\r\n        <div class=\"card col-md-3 m-1\" align=\"center\">\r\n\r\n            <div class=\"card-body\" align=\"center\">\r\n\r\n                {{ if .Cover }}\r\n                <img class=\"rounded img-fluid\" alt=\"Art\" src=\"{{ .Cover }}\">\r\n                {{end}}\r\n\r\n                <h5 class=\"card-title\">{{.Media.Name}}</h5>\r\n                <p class=\"card-text\">Type: {{.Media.Format.Name }}</p>\r\n                <p class=\"card-text\">Size: {{.Media.Size}} mb</p>\r\n\r\n                {{ if .Rating.Present }}\r\n                <p class=\"card-text\">Rating: {{.Rating.Value}} / {{.Rating.Max}}</p>\r\n                {{end}}\r\n\r\n\r\n                <a href=\"media/{{.Media.Hash}}\" class=\"btn btn-primary\">\r\n                    {{ if .Playable }}\r\n                    Play\r\n                    {{ else }}\r\n                    Download\r\n                    {{ end }}\r\n\r\n                </a>\r\n\r\n\r\n            </div>\r\n        </div>\r\n        {{end}}\r\n    </div>\r\n</div>\r\n\r\n\r\n{{end}}"),
	}

	// define dirs
	dir1 := &embedded.EmbeddedDir{
		Filename:   "",
		DirModTime: time.Unix(1608947024, 0),
		ChildFiles: []*embedded.EmbeddedFile{
			file2, // "base.html"
			file3, // "login.html"
			file4, // "media-list.html"

		},
	}

	// link ChildDirs
	dir1.ChildDirs = []*embedded.EmbeddedDir{}

	// register embeddedBox
	embedded.RegisterEmbeddedBox(`../../ui`, &embedded.EmbeddedBox{
		Name: `../../ui`,
		Time: time.Unix(1608947024, 0),
		Dirs: map[string]*embedded.EmbeddedDir{
			"": dir1,
		},
		Files: map[string]*embedded.EmbeddedFile{
			"base.html":       file2,
			"login.html":      file3,
			"media-list.html": file4,
		},
	})
}
